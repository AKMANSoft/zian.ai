/* tslint:disable */
/* eslint-disable */
/**
 * Content Creator and Scheduler API
 * Content Creator and Scheduler API for frontend
 *
 * The version of the OpenAPI document: v1
 * Contact: contact@snippets.local
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ScheduleForTwitterPost } from './ScheduleForTwitterPost';
import {
    ScheduleForTwitterPostFromJSON,
    ScheduleForTwitterPostFromJSONTyped,
    ScheduleForTwitterPostToJSON,
} from './ScheduleForTwitterPost';

/**
 * 
 * @export
 * @interface SchedulesList200Response
 */
export interface SchedulesList200Response {
    /**
     * 
     * @type {number}
     * @memberof SchedulesList200Response
     */
    count: number;
    /**
     * 
     * @type {string}
     * @memberof SchedulesList200Response
     */
    next?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SchedulesList200Response
     */
    previous?: string | null;
    /**
     * 
     * @type {Array<ScheduleForTwitterPost>}
     * @memberof SchedulesList200Response
     */
    results: Array<ScheduleForTwitterPost>;
}

/**
 * Check if a given object implements the SchedulesList200Response interface.
 */
export function instanceOfSchedulesList200Response(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "count" in value;
    isInstance = isInstance && "results" in value;

    return isInstance;
}

export function SchedulesList200ResponseFromJSON(json: any): SchedulesList200Response {
    return SchedulesList200ResponseFromJSONTyped(json, false);
}

export function SchedulesList200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SchedulesList200Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'count': json['count'],
        'next': !exists(json, 'next') ? undefined : json['next'],
        'previous': !exists(json, 'previous') ? undefined : json['previous'],
        'results': ((json['results'] as Array<any>).map(ScheduleForTwitterPostFromJSON)),
    };
}

export function SchedulesList200ResponseToJSON(value?: SchedulesList200Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'count': value.count,
        'next': value.next,
        'previous': value.previous,
        'results': ((value.results as Array<any>).map(ScheduleForTwitterPostToJSON)),
    };
}

