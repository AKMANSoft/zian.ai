/* tslint:disable */
/* eslint-disable */
/**
 * Content Creator and Scheduler API
 * Content Creator and Scheduler API for frontend
 *
 * The version of the OpenAPI document: v1
 * Contact: contact@snippets.local
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ImageForTwitterPost
 */
export interface ImageForTwitterPost {
    /**
     * 
     * @type {number}
     * @memberof ImageForTwitterPost
     */
    image: number;
    /**
     * 
     * @type {string}
     * @memberof ImageForTwitterPost
     */
    readonly imageUrl?: string;
    /**
     * 
     * @type {number}
     * @memberof ImageForTwitterPost
     */
    owner: number;
    /**
     * 
     * @type {number}
     * @memberof ImageForTwitterPost
     */
    status?: number;
    /**
     * 
     * @type {number}
     * @memberof ImageForTwitterPost
     */
    content: number;
    /**
     * 
     * @type {Date}
     * @memberof ImageForTwitterPost
     */
    readonly createdTime?: Date;
}

/**
 * Check if a given object implements the ImageForTwitterPost interface.
 */
export function instanceOfImageForTwitterPost(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "image" in value;
    isInstance = isInstance && "owner" in value;
    isInstance = isInstance && "content" in value;

    return isInstance;
}

export function ImageForTwitterPostFromJSON(json: any): ImageForTwitterPost {
    return ImageForTwitterPostFromJSONTyped(json, false);
}

export function ImageForTwitterPostFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImageForTwitterPost {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'image': json['image'],
        'imageUrl': !exists(json, 'image_url') ? undefined : json['image_url'],
        'owner': json['owner'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'content': json['content'],
        'createdTime': !exists(json, 'created_time') ? undefined : (new Date(json['created_time'])),
    };
}

export function ImageForTwitterPostToJSON(value?: ImageForTwitterPost | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'image': value.image,
        'owner': value.owner,
        'status': value.status,
        'content': value.content,
    };
}

