/* tslint:disable */
/* eslint-disable */
/**
 * Content Creator and Scheduler API
 * Content Creator and Scheduler API for frontend
 *
 * The version of the OpenAPI document: v1
 * Contact: contact@snippets.local
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Project
 */
export interface Project {
    /**
     * 
     * @type {number}
     * @memberof Project
     */
    readonly id?: number;
    /**
     * 
     * @type {string}
     * @memberof Project
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Project
     */
    summary: string;
    /**
     * 
     * @type {number}
     * @memberof Project
     */
    status?: number;
    /**
     * 
     * @type {number}
     * @memberof Project
     */
    owner: number;
    /**
     * 
     * @type {Date}
     * @memberof Project
     */
    readonly createdTime?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Project
     */
    readonly modifiedTime?: Date | null;
}

/**
 * Check if a given object implements the Project interface.
 */
export function instanceOfProject(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "summary" in value;
    isInstance = isInstance && "owner" in value;

    return isInstance;
}

export function ProjectFromJSON(json: any): Project {
    return ProjectFromJSONTyped(json, false);
}

export function ProjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): Project {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': json['name'],
        'summary': json['summary'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'owner': json['owner'],
        'createdTime': !exists(json, 'created_time') ? undefined : (new Date(json['created_time'])),
        'modifiedTime': !exists(json, 'modified_time') ? undefined : (json['modified_time'] === null ? null : new Date(json['modified_time'])),
    };
}

export function ProjectToJSON(value?: Project | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'summary': value.summary,
        'status': value.status,
        'owner': value.owner,
    };
}

